getwd()
##+ OBLIGATORY MANUAL SETTINGS-----------------------------------------
#set main working directory: ".../semantic_sustainability_assessment/"
wd.main <- "M:/Science/Programmierung/Github/semantic_sustainability_assessment/"
setwd(wd.main)
wd.current <- getwd()
setwd(wd.final)
##+ OBLIGATORY MANUAL SETTINGS-----------------------------------------
#set main working directory: ".../semantic_sustainability_assessment/"
wd.main <- "M:/Science/Programmierung/Github/semantic_sustainability_assessment/"
setwd(wd.main)
#optional, if more or less processed source code shall be displayed:
deparse.length <- 10^6
##~-------------------------------------------------------------------
##+ INITIAL TIME COUNTER TO ASSESS COMPUTING TIME------------
time.elapsed <- rbind(c(), proc.time())
row.names(time.elapsed)[nrow(time.elapsed)] <- "start"
##~----------------------------------
##+ LOAD OPTIONAL MANUAL SETTINGS ------------------------------
print("Please adapt the file 01_INITIAL_MANUAL_SETTINGS.R in the code/ folder if you want to customize filenames, etc. This is optional, the file contains preset values.")
#load manual settings
source(paste0(wd.main, "code/","01_INITIAL_MANUAL_SETTINGS.R"),
echo=T, max.deparse.length = deparse.length)
##~----------------------------------------------------------------------
##+ LOAD DEFINITIONS AND FUNCTIONS -------------------------------------
source(paste0(wd.main, "code/", "02_LOAD_DEFINITIONS_OPTIONS_FUNCTIONS.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
wd.current <- getwd()
setwd(wd.final)
results.occ.final <- read.csv(file.occurrence.results)
head(results.occ.final)
results.occ.final <- read.csv(file.occurrence.results, row.names = 1)
head(results.occ.final)
row.names(results.occ.final) <- gsub("--","><",row.names(results.occ.final) )
row.names(results.occ.final) <- paste0("<",row.names(results.occ.final) )
row.names(results.occ.final) <- paste0(row.names(results.occ.final), ">" )
categories.exclude <- grep("<fed_state><ger>", rownames(results.occ.final), ignore.case = T)
results.occ.final <- results.occ.final[-categories.exclude,]
categories.select1 <- grep("<1>", rownames(results.occ.final), ignore.case = T)
results.occ.social <- results.occ.final[categories.select1,]
##+ 13_PREPARE_OCCURRENCE_RESULTS_FOR_PLOTTING -------------------------------------
source(paste0(wd.code, "13_PREPARE_OCCURRENCE_RESULTS_FOR_PLOTTING.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
results.occ.final
##+ 14_BOXPLOT_OCCURRENCE_ENERGY-------------------------------------
source(paste0(wd.code, "14_BOXPLOT_OCCURRENCE_ENERGY.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
rownames(results.occ.energy)
row.names(results.occ.final)[grep("<1>", row.names(results.occ.final))]
row.names(results.occ.final)[grep("<3>", row.names(results.occ.final))]
row.names(results.occ.social)
row.names(results.occ.sustainability)
categories.SOC <- row.names(results.occ.social)
categories.ENG <- row.names(results.occ.energy)
categories.SUS <- row.names(results.occ.sustainability)
categories.SOC <- gsub("(^<[\\d]>)(<[\\w]{3}>)(.*$)", "\\3", categories.SOC, perl=T)
categories.ENG <- gsub("(^<[\\d]>)(<[\\w]{3}>)(.*$)", "\\3", categories.ENG, perl=T)
categories.SUS <- gsub("(^<[\\d]>)(<[\\w]{3}>)(.*$)", "\\3", categories.SUS, perl=T)
categories.SOC <- gsub("(^<[\\w]+>)(<.*$)", "\\1~#~\\2", categories.SOC, perl=T)
categories.ENG <- gsub("(^<[\\w]+>)(<.*$)", "\\1~#~\\2", categories.ENG, perl=T)
categories.SUS <- gsub("(^<[\\w]+>)(<.*$)", "\\1~#~\\2", categories.SUS, perl=T)
separator <- "~#~"
categories.SOC <- do.call(rbind,strsplit(categories.SOC, separator, perl=T))
categories.ENG <- do.call(rbind,strsplit(categories.ENG, separator, perl=T))
categories.SUS <- do.call(rbind,strsplit(categories.SUS, separator, perl=T))
categories.SOC
categories.ENG
categories.SUS
row.names(x_sust)
row.names(x)
##+ 17_PREPARE_COOCCURRENCE_RESULTS_FOR_PLOTTING -------------------------------------
source(paste0(wd.code, "17_PREPARE_COOCCURRENCE_RESULTS_FOR_PLOTTING.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
row.names(x_sust)
##+ 19_COOCCURRENCE_ENERGY_SYSTEM_AND_SUSTAINABILITY -------------------------------------
source(paste0(wd.code, "19_COOCCURRENCE_ENERGY_SYSTEM_AND_SUSTAINABILITY.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
##+ 19_COOCCURRENCE_ENERGY_SYSTEM_AND_SUSTAINABILITY -------------------------------------
source(paste0(wd.code, "19_COOCCURRENCE_ENERGY_SYSTEM_AND_SUSTAINABILITY.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
##+ 17_PREPARE_COOCCURRENCE_RESULTS_FOR_PLOTTING -------------------------------------
source(paste0(wd.code, "17_PREPARE_COOCCURRENCE_RESULTS_FOR_PLOTTING.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
##+ 18_COOCCURRENCE_PLOT_ENERGY_AND_SOCIAL_SYSTEM -------------------------------------
source(paste0(wd.code, "18_COOCCURRENCE_PLOT_ENERGY_AND_SOCIAL_SYSTEM.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
##+ 19_COOCCURRENCE_ENERGY_SYSTEM_AND_SUSTAINABILITY -------------------------------------
source(paste0(wd.code, "19_COOCCURRENCE_ENERGY_SYSTEM_AND_SUSTAINABILITY.R"),
echo=T, max.deparse.length = deparse.length)
#computing time to this step
time.elapsed
##~--------------------------------------------------------------------
row.names(x_sust)
